<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoju.framework.mapper.AgileTestTaskMapper">
  <resultMap id="BaseResultMap" type="com.xiaoju.framework.entity.persistent.AgileTestTask">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="case_count" jdbcType="INTEGER" property="caseCount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="task_type" jdbcType="TINYINT" property="taskType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiaoju.framework.entity.persistent.AgileTestTask">
    <result column="test_command" jdbcType="LONGVARCHAR" property="testCommand" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, create_user_id, case_count, remark, task_type, status, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    test_command
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from agile_test_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from agile_test_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaoju.framework.entity.persistent.AgileTestTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into agile_test_task (name, create_user_id, case_count, 
      remark, task_type, status, 
      create_time, update_time, test_command
      )
    values (#{name,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, #{caseCount,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{taskType,jdbcType=TINYINT}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{testCommand,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoju.framework.entity.persistent.AgileTestTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into agile_test_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="caseCount != null">
        case_count,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="testCommand != null">
        test_command,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="caseCount != null">
        #{caseCount,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testCommand != null">
        #{testCommand,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoju.framework.entity.persistent.AgileTestTask">
    update agile_test_task
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="caseCount != null">
        case_count = #{caseCount,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="testCommand != null">
        test_command = #{testCommand,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaoju.framework.entity.persistent.AgileTestTask">
    update agile_test_task
    set name = #{name,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      case_count = #{caseCount,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=TINYINT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      test_command = #{testCommand,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoju.framework.entity.persistent.AgileTestTask">
    update agile_test_task
    set name = #{name,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      case_count = #{caseCount,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=TINYINT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>